Tri-Tech Skills Center Year 1 DigiPen RTIS Syllabus

Instructor: Randy Reed | randy.reed@ksd.org | 509-222-5277		Hours: AM Session 8:00- 10:30
Instructor: Craig Coleman | craig.coleman@ksd.org | 509-222-5277	Hours: PM Session 11:30- 2:00
											 
Course Description
This course is designed for the student who wishes to become a video game programmer also known as RTIS – real time interactive simulation. Students will learn the programming skills necessary to make video games work and the art and design theory needed to make video games visually appealing.  The course will show you how math and written communication are used extensively in the video game industry and introduce you to career opportunities in this field.
Instructional Philosophy
Students in Tri-Tech’s DigiPen Computer Science program will experience a project based curriculum. You will create a series of six video games, each increasing in complexity. As you develop your skills you will learn how to analyze and think like a video game designer and programmer. Math, logic, art, and communication skills will be developed and utilized as needed to complete each project. 
Course Goals	
The goal of this course is to provide students with the principles, concepts, and methodologies required in the role of a video game developer.  The following themes have been established as key elements for the Tri-Tech DigiPen Technology Academy and will be examined throughout the course: 

•	Mathematics and logic are fundamental to the planning and programming of video games.
Advanced math skills allow one to model real and other world physics more effectively.
Logic is required from the planning stages of a game to the execution of writing code.
•	A video game developer must be an effective communicator.
Effective communication requires clear and concise writing.	
Reflection is an important tool of the game developer. (e.g.  “The post-mortem”)
•	Understanding and application of key art principles are essential to the game developer.
The art elements of line, shape, form, space, texture, value, and color are used throughout the game design process.
Knowledge of the psychology of aesthetics (what people find visually pleasing) is important to the developer.
•	Video game development is a team effort.
Virtually all successful games today are developed by a team working toward a common goal.
The successful developer (team member) must meet milestones and due dates with their best work.
•	The game developer must understand and embrace professional ethical standards.
Understanding the concepts of copyright and intellectual property is vital to the game developer.
Your reputation as a programmer / developer is forged by your performance and professional conduct.
•	Your employability and/or pursuit of further education in the field of video game development require a personal demonstration of your skills and aptitudes regarding the goals outlined above. 
A complete professional portfolio of your best work will be created and developed as you progress through this course.
A resume’ and list of references will be maintained and updated as part of the portfolio.
An oral presentation of your portfolio will be given to Tri-Tech staff and visitors.

Text
DigiPen Technology Academy – Modules 1-6 Copyright © 2007-08 DigiPen (USA) Corporation
Reference Text
Starting Out with C++ Early Objects – Sixth Edition (Tony Gaddis, Judy Walters, Godfrey Muganda).
Reference Websites
https://projectfun.digipen.edu/ (game assets and PFE game development forums)	
http://www.cplusplus.com/ (programming assistance / tutorials)
http://zero.digipen.edu / Zero Game Engine resources and tutorials 
http://tritechsc.org /Tri-Tech’s Google Apps For Education site – class materials, videos, projects etc.
http://goomba.homestead.com (Pre-2014 completed student projects can be found here)
Major Course Assignments and Projects
Students will be assessed using a variety of methods to determine not only how much they learned, but the depth and breadth of their understanding of the concepts that are explored in the class.  These methods will include:
	Diagnostic Entrance Exam covering math, logic, and art topics
	Completed Game Projects (rubrics will be provided for all projects)
	Participation in journal writing and short essay assignments	
	Sketchbook entries and digital art assignments
	Completion of C++ programming assignments (some Java and Python assignments as well)
	Online and in-class discussions 
	Class Presentations – (rubric will be provided)
	Quizzes testing understanding of mathematics, art, and programming concepts.
	Self and Course Evaluations
In addition, each student must successfully complete a comprehensive Portfolio which will include a Mission Statement, Resume’, Application, Cover Letter, Employability Skills, character references, Reflection Paper, and Evidence of Best Work. A rubric will be provided for the portfolio during the 2nd week of school.
	
Grading Policy 

You will be evaluated on the basis of your performance on the following: knowledge and application of content, professionalism and commitment to your own learning.  Student overall grade will be based on the following:

20%	Employability	attendance, time and self-management, leadership, participation, safety, professionalism
20%	Tech English		(0.5 Equiv. credit) portfolio, journal & essay writing, presentations
20%	Art			(1.0 Equiv. credit) art concept quizzes, sketchbook, digital art assets, use in games
20%	Math			(1.0 Equiv. credit) math concept quizzes, math notebook entries, use in games
20%	Computer Science	C++ / (explore Java and Python) programming & game development projects
------	------------------
100%	Game Development	You can check grades at http://www.ksd.org/default.aspx (click PowerSchool Parent Portal)

Grading Scale: 
A	98-100	(4.0)
A	96-97	(3.9)
A	95	(3.8)	
A-	94	(3.7)
 A-	92-93	(3.6)
A-	91	(3.5)		
B+	89-90	(3.4)
B+	88	(3.3)
B+	87	(3.2)
B	86	(3.1)
B	85	(3.0)
C+	81-84
C	76-80
C-	72-75
D	69-71
F	68 – below – No credit earned
Classroom Expectations – The Tri-Tech Skills Center

Show respect for other students, staff, and all Tri-Tech equipment and facilities. Compliance with all network and internet use policies is mandatory. Absences require making up the work and the time. A parent should call 222-7307 if you will be late or absent. A note or parent phone call is also required if you must leave class early.

Special Considerations for DigiPen Students:

We take extra care to make sure equipment and furniture remains in great shape. No food or drinks near the computers. Chairs should not be used to move from one location to another. Get up and walk.

You have been granted special computer privileges at Tri-Tech in order to participate in this program. Along with the privileges you will have added responsibilities. One important concern is that the ProjectFun programs must be developed on the C: drive, therefore it will become part of your daily routine to copy any work you do to your network drive as a back up. It is suggested you get a flash drive (4 GB should be plenty) or use cloud storage (google drive, etc.) as a third back up for your most important work, e.g. your portfolio, electronic journal, and current game files. 

A few important additional rules:
•	Cell phones on vibrate and out of sight. If there is an important call or text – take care of it quickly and quietly in the teacher’s office. Headphones off and earbuds out when teacher, student or guests are addressing the class.
•	Do not download any file or install any program on the Tri-Tech machines without explicit instructor approval.
•	Do not violate copyright laws by using images, text or other intellectual property from the internet or elsewhere in your projects. Create your own assets! (note: editing someone else’s work and passing it off as your own isn’t ethical either)
•	No Flash games or streaming media (music / flash games) during class w/o explicit instructor approval. 
•	Don’t bring your portable game devices or games on Flash Drive. Work on your given tasks and if you have extra time – refine your work, ask the instructor for extension ideas or work on instructor - approved “side project”. 
•	We will be writing computer code – any attempts at malicious code (even for practical joke purposes) may result in your immediate removal from the DigiPen program.

Please do not bring work from other classes to your DigiPen class. (Who would want to?) If there is something you simply must do for another class – talk with the instructor and with approval you may be given a location away from the computer lab to work but you will not receive credit for participation unless time and work is made up later. 

We will be doing mathematics, art, writing and programming almost every day. When working in an area that may not be your favorite, please do your best to focus on the task assigned – each are part of the required learning process.


Despite all the rules, I believe you will enjoy the DigiPen RTIS Class. Let’s have a great year.


By signing below you agree that you have read, understand and agree to the responsibilities contained in this document.


Print Student Name: __________________________________


Signature: ___________________________________________		Date: ____________


Parent or Guardian Signature: ___________________________		Date: ____________
Course Overview
Module 1:  Game Elements I – The Cage Screen Saver (~6 days)
This module is introductory in nature. Students get the basic overview of computers, languages, binary, art elements and a look at the Trigonometry needed to make games. The Trig is designed to encourage students by showing them their ability to handle the ideas and where it is used. Ideally this module can be completed in fifteen classroom hours.
A.	Game Project
* Actors
* Sprites
* Background
* Sprite Properties (button behaviors)
* Importing Behaviors
B.	Historical Context
* Computers
* Number Systems
* Video Games
* Game Development
C.	Programming:
* Real-time Interactive Simulation
* C/C++ Overview
* Logic Gates and Adders
* Software
* Hardware
D.	Math:
* Conversions Between Bases
* Trigonometry
	* Logic Gates
E.	Art:
* Art Elements
	* Intro to Paint
	

Module 2:  Game Elements II, Programming – Base Maze (~18 days)
This module uses a console-based Base Maze game to underscore the handling and displaying portions of the game loop.  Data types, expressions, functions and flow control are taught to allow this application. Math concepts are simplistic but show the building up of knowledge to achieve the modulus function. The goal is completion of this module in forty five classroom hours.
A.	Programming (Using C):
* Data (Variables - Declaration- Definition - Local - Global)
* I/O 
* Structure
* Expression
* Operator
* Syntax
* Function
* Game Loop
* Flow
B.	Game Production:
* The Game Design Document (GDD)
* The Technical Design Document (TDD)
	* Handling and Display
C.	Math:
* Definition of Function
* Introduction to usual numerical functions
D.	Art
* Basic Color Theory
* Research and Design
	* Anatomy of Motion
E.	Project - BaseMaze
A maze is generated using two loops. One for horizontal lines and the other is for vertical lines. The letter P (for player) has to reach the assigned base. P moves using the following entries: l for left, r for right, u for up, and d for down. The letter B represents the fixed base. The symbol (<>) represents the enemies that P should avoid. Each of the enemies moves left and right with different speed. The primary learning goal is a thorough understanding of the game loop; handling and then display.

Module 3:  Game Dynamics – Pong (~24 days)
This module is the students' first chance to make an actual game using ProjectFUN Editor. The Pong style game they create will teach them about object oriented programming, classes, pointers, coordinate systems, vector math, and planning and executing their own Game Design Documents. The goal is completion of this module in sixty classroom hours.
A.	Programming (Using C++):
* Reflection (static library)
* Objects
* OOP
* Classes
* Function
* Member
* Pointers
B.	Math:
* Coordinate System
* Vectors
* Reflection
C.	Fun:
* Sprites, 
* Map
* Level
* Animation
* Character
* Sound
* Behavior
* Collision
	* State Machine
	* Text
	* AI paddle
D.	Art
	* Image file types
	* Intro to Photoshop
E.	Project - Pong
This is an introduction to ProjectFUN Editor, maps, Level Concept, and background sound. A vertical rectangle that moves up and down using up and down arrows keys and a ball bounces against the paddle and walls. 

Module 4: Collision Engines – LetterBricks (~36 days)
This module applies the math, programming and art concepts towards the development of a Breakout-type game named LetterBricks.  In addition to bricks deleting, each brick holds a letter that can be used to build words. The goal is completion of this module in ninety classroom hours.
A.	Programming (Using C++):
* Structures
* Arrays (one-dimensional)
* Bubble Sort Algorithm
* Binary Search Algorithm

B.	Math:
* Linear Equations
	*Systems of Linear Equations
	*Quadratic Equations
	*Collision Circle to Line
	*Collision Circle to Circle
C.	Art:
* Design Process 
* Golden Rectangles
* Intro to 3D Studio Max
* Animation

D.	Game Design Document:
	*Game Overview
	*User Interface
	*Game Level Breakdown
	*Actor/Sound Effect Checklist

E.	Project - LetterBricks
Linear systems and quadratics are used by the student to build their own collision engine.  Arrays, Bubble Sorts and Binary Search Algorithm compare the letters hit to words from a defined list.  Students learn more design theory and begin exploring 3D modeling.

 Module 5:  Matrix Basics – Sweeper (42 days)
This module applies the various concepts towards the development of a "Pacman"-type game called Sweeper.  The map collision is held as a binary map, a 2D array in code.  The goal is completion of this module in one-hundred and five classroom hours.
A.	Programming (Using C++):
* Classes II
* Arrays (two-dimensional)
* Binary Map 

B.	Math:
* Matrices 
	* Determinant Function
	*Transformations of Matrices

C.	Art:
* Psychology of Color 
* 3D Primitives and Modeling
* Intro to 3D Spline Modeling

D.	Game:
	*Artificial Intelligence

E.	Project - Sweeper
Through use of matrices and transformations, the power up sprite will circle the bonus 'food' until it is eaten by the main character, at which point it will follow the player while in power-up mode.


Module 6:  3D Character & Game Design – Mato Hiro RPG (~42 days)
This module applies the concepts towards the development of a Role Playing Game (RPG).The goal is completion of this module in one-hundred and five classroom hours.

C.	Art
	* Character Design
	*3d Studio Grouping
D.	Programming:
	*Linked List
	*Classes
	*Stack
	*Recursion
	*File I/O
	*Uniform Space Partition
	* Inheritance
